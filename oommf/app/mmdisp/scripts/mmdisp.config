# FILE: mmdisp.config           -*-Mode: tcl-*-
#
# mmDisp configuration.  This file must be valid Tcl code.

# This file should only be sourced from within another Tcl application.
# Check to make sure we aren't at the top application level
if {[string match [info script] $argv0]} {
    error "'[info script]' must be evaluated by an mmdisp-style application"
}

proc GetDefaultBackgroundColor {} {
   set light_color #FFFFFF
   set dark_color  #7F7F7F ;# Note: If this shade is larger than #7F, then
   ## the default colormap selections below will always choose the
   ## "light mode" colormaps.
   set background [option get . background *]
   if {[llength $background]>0} {
      # --- Auto canvas background color selection ---
      # If background is set in the Tk option database, use that to
      # pick background color.
      # Note: Ow_ChangeColorScheme calls tk_setPalette, and any call
      #  to tk_setPalette sets the background entry to the Tk option
      #  database.
      if {[Ow_GetShade $background]<128} {
         set bgclr $dark_color
      } else {
         set bgclr $light_color
      }
   } else {
      set bgclr $light_color ;# default
      # If on macOS/aqua and dark mode is specified, use dark background
      if {[string match aqua [tk windowingsystem]]} {
         update idletasks ;# In auto appearance mode, the command
         ##   ::tk::unsupported::MacWindowStyle isdark
         ## needs 'update idletasks' to work properly (Tk 8.6.10).
         if {![catch {::tk::unsupported::MacWindowStyle isdark .} _] \
                && $_} {
            set bgclr $dark_color
         }
      }
   }
   return $bgclr
}

# Plot configuration array
array set plot_config {
   arrow,status              1
   arrow,autosample          1
   arrow,subsample           0
   arrow,colormap            Red-Black-Blue
   arrow,colorcount          256
   arrow,quantity            z
   arrow,colorreverse        0
   arrow,colorphase          0
   arrow,size                1
   arrow,viewscale           1
   pixel,status              0
   pixel,autosample          1
   pixel,subsample           0
   pixel,colormap            Blue-White-Red
   pixel,colorcount          256
   pixel,quantity            x
   pixel,colorreverse        0
   pixel,colorphase          0
   pixel,size                1
   pixel,opaque              1
   misc,background           white
   misc,drawboundary         1
   misc,boundarycolor        black
   misc,boundarywidth        1
   misc,margin               10
   misc,defaultwindowwidth   640
   misc,defaultwindowheight  480
   misc,width                0
   misc,height               0
   misc,rotation             0
   misc,zoom                 0
   misc,datascale            0
   misc,relcenterpt          {0.5 0.5 0.5}
   viewaxis                  +z
   viewaxis,xarrowspan       {}
   viewaxis,xpixelspan       {}
   viewaxis,yarrowspan       {}
   viewaxis,ypixelspan       {}
   viewaxis,zarrowspan       {}
   viewaxis,zpixelspan       {}
}
if {![catch {GetDefaultBackgroundColor} _]} {
   set plot_config(misc,background) $_
   if {[Ow_GetShade $_]<128} {
      # Dark mode
      set plot_config(arrow,colormap) Blue-White-Red
      set plot_config(pixel,colormap) Red-Black-Blue
   } else {
      # Light mode
      set plot_config(arrow,colormap) Red-Black-Blue
      set plot_config(pixel,colormap) Blue-White-Red
   }
}

# Print configuration array
array set print_config {
    orient   "landscape"
    paper    "letter"
    hpos     "center"
    vpos     "center"
    units    "in"
    tmargin  "1.0"
    lmargin  "1.0"
    pwidth   "6.0"
    pheight  "6.0"
    croptoview "1"
}

# Source in local/mmdisp.config file, if it exists
set fn [file join [file dirname \
	[Oc_DirectPathname [info script]]] local mmdisp.config]
if {[file readable $fn]} {
    if {[catch {source $fn} msg]} {
        global errorInfo errorCode
	set msg [join [split $msg \n] \n\t]
	error "Error sourcing local options file:\n    $fn:\n\t$msg" \
		$errorInfo $errorCode
    }
}
