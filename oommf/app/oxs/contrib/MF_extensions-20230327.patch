diff -ru MF_extensions/MF_CurrentFlowEvolver.cc MF_extensions-new/MF_CurrentFlowEvolver.cc
--- MF_extensions/MF_CurrentFlowEvolver.cc	2022-10-26 22:15:46.000000000 -0400
+++ MF_extensions-new/MF_CurrentFlowEvolver.cc	2023-03-25 16:16:55.000000000 -0400
@@ -12,7 +12,7 @@
  * This code is public domain work based on other public domains contributions
  */
 
-#include <float.h>
+#include <cfloat>
 #include <string>
 #include <fstream>
 #include <iostream>
@@ -43,12 +43,16 @@
   Oxs_Director* newdtr, // App director
   const char* argstr)   // MIF input block parameters
   : Oxs_TimeEvolver(name,newdtr,argstr),
-    mesh_id(0),
+    mesh_id(0), has_V_profile(0),
     max_step_decrease(0.03125), max_step_increase_limit(4.0),
     max_step_increase_adj_ratio(1.9),
+    Xstep(0.), Ystep(0.), Zstep(0.), n_x(0), n_y(0), n_z(0),
     reject_goal(0.05), reject_ratio(0.05),
+    step_headroom(0.),
     energy_state_id(0),next_timestep(0.),
-    rkstep_ptr(NULL)
+    rkstep_ptr(NULL),
+    aJ_s(0.), aJ_p(0.), Rs_ap(0.), Rs_p(0.), torq_const(0.),
+    bdry1_value(0.), bdry2_value(0.)
 {
 
 
@@ -75,7 +79,7 @@
 RA_ap = GetRealInitValue("RA_ap",0.);
 work_mode = GetRealInitValue("current_mode",0.);
 Voltage = 0.;
-state_num = -1;
+state_num = static_cast<OC_UINT4m>(-1);
 OC_REAL8m vmult = GetRealInitValue("multiplier",1.0);
 
 
@@ -522,14 +526,16 @@
   // Zero spin torque on fixed spins
 	const OC_INDEX size = mesh->Size();
 
-	OC_INDEX i,j;
+	OC_INDEX i;
 
   UpdateFixedSpinList(mesh); // Safety
 
+#if 0 // This block doesn't do anything  -mjd
   const OC_INDEX fixed_count = GetFixedSpinCount();
   for(j=0;j<fixed_count;j++) {
-    OC_INDEX i = GetFixedSpin(j);  // This is a NOP?! -mjd
+    OC_INDEX i = GetFixedSpin(j);
   }
+#endif
 
   alpha_init->FillMeshValue(mesh,alpha);
   gamma_init->FillMeshValue(mesh,gamma);
@@ -683,7 +689,7 @@
 		{	
 			scratch1a.z -= mesh->EdgeLengthZ();
 		}
-		while ( scratch1a.z < dimZ*mesh->EdgeLengthZ() )
+		while ( scratch1a.z < n_z*mesh->EdgeLengthZ() )
 		{
 		
 			vector_r_in_loop=scratch1;
@@ -1023,7 +1029,7 @@
   if(stepsize<timestep_lower_bound) stepsize = timestep_lower_bound;
 
   // Negotiate with driver over size of next step
-  driver->FillState(cstate,nstate);
+  driver->FillStateMemberData(cstate,nstate);
   UpdateTimeFields(cstate,nstate,stepsize);
 
   // Update iteration count
@@ -1031,7 +1037,11 @@
   nstate.stage_iteration_count = cstate.stage_iteration_count + 1;
 
   // Additional timestep control
+#if OOMMF_API_INDEX < 20230325
   driver->FillStateSupplemental(nstate);
+#else
+  driver->FillStateSupplemental(cstate,nstate);
+#endif
 
   // Check for forced step
   force_step = 0;
@@ -2038,7 +2048,7 @@
 OC_BOOL
 MF_CurrentFlowEvolver::Step(const Oxs_TimeDriver* driver,
                       Oxs_ConstKey<Oxs_SimState> current_state_key,
-                      const Oxs_DriverStepInfo& step_info,
+                      Oxs_DriverStepInfo& step_info,
                       Oxs_Key<Oxs_SimState>& next_state_key)
 {
   const OC_REAL8m bad_energy_cut_ratio = 0.75;
@@ -2054,7 +2064,7 @@
   OC_BOOL start_dm_active=0;
   if(next_timestep<=0.0 ||
      (cstate.stage_iteration_count<1
-      && step_info.current_attempt_count==0)) {
+      && step_info.GetCurrentAttemptCount()==0)) {
     if(cstate.stage_number==0
        || stage_init_step_control == SISC_START_DM) {
       start_dm_active = 1;
@@ -2272,7 +2282,6 @@
   // filled.
   max_dm_dt_output.cache.state_id
     = dE_dt_output.cache.state_id
-    = dE_dt_output.cache.state_id
     = delta_E_output.cache.state_id
 = mr_output.cache.state_id
 = oersted_x_output.cache.state_id
@@ -2331,8 +2340,8 @@
 //ComputeConductance(state);
 const Oxs_RectangularMesh* mesh
     = dynamic_cast<const Oxs_RectangularMesh*>(state.mesh);
-const OC_INDEX size = mesh->Size();
-const Oxs_MeshValue<OC_REAL8m>& Ms_ = *(state.Ms);
+// const OC_INDEX size = mesh->Size();
+// const Oxs_MeshValue<OC_REAL8m>& Ms_ = *(state.Ms);
 Oxs_MeshValue<ThreeVector>& con = conductance_output.cache.value;
 Oxs_MeshValue<ThreeVector>& cur = current_density_output.cache.value;
 con.AdjustSize(mesh);
@@ -2363,6 +2372,16 @@
 oersted_y_output.cache.value = tmp.y/((delta_x+1)*(delta_y+1)*(delta_z+1));
 oersted_z_output.cache.value = tmp.z/((delta_x+1)*(delta_y+1)*(delta_z+1));
 
+if(!state.GetDerivedData("Oersted field x",dummy_value)) {
+  state.AddDerivedData("Oersted field x",oersted_x_output.cache.value);
+}
+if(!state.GetDerivedData("Oersted field y",dummy_value)) {
+  state.AddDerivedData("Oersted field y",oersted_y_output.cache.value);
+}
+if(!state.GetDerivedData("Oersted field z",dummy_value)) {
+  state.AddDerivedData("Oersted field z",oersted_z_output.cache.value);
+}
+
 for(it=links.begin();it!=links.end();++it)
 {
 	conductance += it->conductance;
@@ -2382,10 +2401,16 @@
 conductance_output.cache.state_id=state.Id();
 current_density_output.cache.state_id=state.Id();
 
+mr_output.cache.value = 1/conductance;
+if(!state.GetDerivedData("magnetoresistance",dummy_value)) {
+  state.AddDerivedData("magnetoresistance",mr_output.cache.value);
+}
 
+ voltage_output.cache.value = Voltage;
+ if(!state.GetDerivedData("voltage",dummy_value)) {
+   state.AddDerivedData("voltage",voltage_output.cache.value);
+ }
 
-mr_output.cache.value = 1/conductance;
-voltage_output.cache.value = Voltage;
     if(!state.GetDerivedData("Max dm/dt",dummy_value)) {
       state.AddDerivedData("Max dm/dt",max_dm_dt_output.cache.value);
     }
@@ -2460,7 +2485,7 @@
   const Oxs_RectangularMesh* mesh
     = dynamic_cast<const Oxs_RectangularMesh*>(state.mesh);
   const OC_INDEX size = mesh->Size();
-  OC_INDEX i,j;
+  // OC_INDEX i,j;
 	ThreeVector scratch;
 	ThreeVector scratch2;
 
diff -ru MF_extensions/MF_CurrentFlowEvolver.h MF_extensions-new/MF_CurrentFlowEvolver.h
--- MF_extensions/MF_CurrentFlowEvolver.h	2022-10-26 22:15:46.000000000 -0400
+++ MF_extensions-new/MF_CurrentFlowEvolver.h	2023-03-22 01:11:39.000000000 -0400
@@ -213,9 +213,9 @@
 ThreeVector STT_perp_s;
 ThreeVector STT_perp_p;
 Oxs_MeshValue<ThreeVector> oersted_field;
-int pom;
-int state_num;
-int dimY,dimX,dimZ,dimXY,cooXYZ;
+/* int pom;  // Not used */
+OC_UINT4m state_num;
+/* int dimY,dimX,dimZ,dimXY,cooXYZ; // Not used */
 OC_REAL8m distance;
 OC_REAL8m area_x, area_y, area_z, delta_x, delta_y, delta_z;
 
@@ -346,7 +346,7 @@
 	OC_REAL8m Rs_p;
 OC_REAL8m work_mode;
 OC_REAL8m oe_mode;
-  OC_REAL8m aJ;
+  /*  OC_REAL8m aJ; // Not used */
   OC_REAL8m eta0;		// STT efficiency, typically 0.7
   OC_REAL8m hbar;
   OC_REAL8m el;
@@ -381,7 +381,7 @@
   virtual  OC_BOOL
   Step(const Oxs_TimeDriver* driver,
        Oxs_ConstKey<Oxs_SimState> current_state,
-       const Oxs_DriverStepInfo& step_info,
+       Oxs_DriverStepInfo& step_info,
        Oxs_Key<Oxs_SimState>& next_state);
   // Returns true if step was successful, false if
   // unable to step as requested.
Only in MF_extensions: MF_CurrentFlowEvolver_README.txt
Only in MF_extensions: MF_MagCut_README.txt
diff -ru MF_extensions/MF_MagnetoResistance.cc MF_extensions-new/MF_MagnetoResistance.cc
--- MF_extensions/MF_MagnetoResistance.cc	2022-10-26 22:15:46.000000000 -0400
+++ MF_extensions-new/MF_MagnetoResistance.cc	2023-03-22 01:11:39.000000000 -0400
@@ -370,6 +370,7 @@
     field[j] +=    Ms_inverse[j]*mdiff;
   }
 
+#if 0 // The following block has no effect, because all the variables are local.  -mjd
   // Set maxang data
   OC_REAL8m maxang;
   // Handle extremal cases separately in case spins drift off S2
@@ -382,6 +383,7 @@
   const Oxs_SimState* oldstate = NULL;
   OC_REAL8m stage_maxang = -1;
   OC_REAL8m run_maxang = -1;
+#endif // NOP
 }
 
 
@@ -429,7 +431,8 @@
 area_conductance2 = 0.;
 area_conductance3 = 0.;
 OC_INDEX indeks,a,b,ii3 =0;
-indeks = (++links.begin())->index1;
+it = links.begin(); ++it; indeks = it->index1; // Compacting this
+                                  // confuses some compilers -mjd
 mesh->GetCoords(indeks,a,b,ii3);
 for (int i1=area_x; i1 <= area_x +delta_x; i1++)
 {
Only in MF_extensions: MF_MagnetoResistance_README.txt
diff -ru MF_extensions/MF_X_MagCut.cc MF_extensions-new/MF_X_MagCut.cc
--- MF_extensions/MF_X_MagCut.cc	2022-10-26 22:15:46.000000000 -0400
+++ MF_extensions-new/MF_X_MagCut.cc	2023-03-22 01:11:39.000000000 -0400
@@ -66,8 +66,8 @@
  ) const
 {
 
-  const Oxs_MeshValue<ThreeVector>& spin = state.spin;
-  const Oxs_MeshValue<OC_REAL8m>& Ms_inverse = *(state.Ms_inverse);
+  // const Oxs_MeshValue<ThreeVector>& spin = state.spin;
+  // const Oxs_MeshValue<OC_REAL8m>& Ms_inverse = *(state.Ms_inverse);
 
   // Use supplied buffer space, and reflect that use in oed.
   oed.energy = oed.energy_buffer;
@@ -96,6 +96,7 @@
   for(index=0;index<size;index++) energy[index]=0.;
   for(index=0;index<size;index++) field[index].Set(0.,0.,0.);
 
+#if 0 // The following block has no effect, because all the variables are local.  -mjd
   OC_REAL8m mindot = 1;
   OC_REAL8m hcoef = 2.0/MU0;
 
@@ -111,6 +112,7 @@
   const Oxs_SimState* oldstate = NULL;
   OC_REAL8m stage_maxang = -1;
   OC_REAL8m run_maxang = -1;
+#endif // NOP
 }
 
 
@@ -127,7 +129,7 @@
 const Oxs_MeshValue<OC_REAL8m>& Ms_ = *(state.Ms);
 
 OC_INDEX pom;
-OC_REAL8m tmp1,tmp2,tmp3;
+OC_REAL8m tmp1;
 OC_REAL8m counter = 0.;
 
 ThreeVector tmp;
diff -ru MF_extensions/MF_Y_MagCut.cc MF_extensions-new/MF_Y_MagCut.cc
--- MF_extensions/MF_Y_MagCut.cc	2022-10-26 22:15:46.000000000 -0400
+++ MF_extensions-new/MF_Y_MagCut.cc	2023-03-22 01:11:39.000000000 -0400
@@ -66,8 +66,8 @@
  ) const
 {
 
-  const Oxs_MeshValue<ThreeVector>& spin = state.spin;
-  const Oxs_MeshValue<OC_REAL8m>& Ms_inverse = *(state.Ms_inverse);
+  // const Oxs_MeshValue<ThreeVector>& spin = state.spin;
+  // const Oxs_MeshValue<OC_REAL8m>& Ms_inverse = *(state.Ms_inverse);
 
   // Use supplied buffer space, and reflect that use in oed.
   oed.energy = oed.energy_buffer;
@@ -96,6 +96,7 @@
   for(index=0;index<size;index++) energy[index]=0.;
   for(index=0;index<size;index++) field[index].Set(0.,0.,0.);
 
+#if 0 // The following block has no effect, because all the variables are local.  -mjd
   OC_REAL8m mindot = 1;
   OC_REAL8m hcoef = 2.0/MU0;
 
@@ -111,6 +112,7 @@
   const Oxs_SimState* oldstate = NULL;
   OC_REAL8m stage_maxang = -1;
   OC_REAL8m run_maxang = -1;
+#endif // NOP
 }
 
 
@@ -127,7 +129,7 @@
 const Oxs_MeshValue<OC_REAL8m>& Ms_ = *(state.Ms);
 
 OC_INDEX pom;
-OC_REAL8m tmp1,tmp2,tmp3;
+OC_REAL8m tmp1;
 OC_REAL8m counter = 0.;
 
 ThreeVector tmp;
diff -ru MF_extensions/MF_Z_MagCut.cc MF_extensions-new/MF_Z_MagCut.cc
--- MF_extensions/MF_Z_MagCut.cc	2022-10-26 22:15:46.000000000 -0400
+++ MF_extensions-new/MF_Z_MagCut.cc	2023-03-22 01:11:39.000000000 -0400
@@ -69,8 +69,8 @@
  ) const
 {
 
-  const Oxs_MeshValue<ThreeVector>& spin = state.spin;
-  const Oxs_MeshValue<OC_REAL8m>& Ms_inverse = *(state.Ms_inverse);
+  // const Oxs_MeshValue<ThreeVector>& spin = state.spin;
+  // const Oxs_MeshValue<OC_REAL8m>& Ms_inverse = *(state.Ms_inverse);
 
   // Use supplied buffer space, and reflect that use in oed.
   oed.energy = oed.energy_buffer;
@@ -100,6 +100,7 @@
   for(index=0;index<size;index++) field[index].Set(0.,0.,0.);
 
 
+#if 0 // The following block has no effect, because all the variables are local.  -mjd
   OC_REAL8m mindot = 1;
   OC_REAL8m hcoef = 2.0/MU0;
 
@@ -116,6 +117,7 @@
   const Oxs_SimState* oldstate = NULL;
   OC_REAL8m stage_maxang = -1;
   OC_REAL8m run_maxang = -1;
+#endif // NOP
 }
 
 
@@ -132,7 +134,7 @@
 const Oxs_MeshValue<OC_REAL8m>& Ms_ = *(state.Ms);
 
 OC_INDEX pom;
-OC_REAL8m tmp1,tmp2,tmp3;
+OC_REAL8m tmp1;
 OC_REAL8m counter = 0.;
 
 ThreeVector tmp;
