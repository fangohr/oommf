# MIF 2.1
# MIF Example File: randomcache.mif
# Description: Sample problem illustrating use of random
#              fields with caching.

set pi [expr {4*atan(1.0)}]
set mu0 [expr {4*$pi*1e-7}]

Parameter K1cubic        250e3
Parameter K1uniaxialmin    1e3
Parameter K1uniaxialmax  500e3

Parameter cellsize 5 ;# Cell size in nm
set cellsize [expr {$cellsize*1e-9}] ;# Convert to meters

Specify Oxs_BoxAtlas:atlas {
  xrange {0 200e-9}
  yrange {0 200e-9}
  zrange {0  10e-9}
}

Specify Oxs_RectangularMesh:mesh1 [subst {
  cellsize {5e-9 5e-9 5e-9}
  atlas :atlas
}]

Specify Oxs_RectangularMesh:mesh2 {
  cellsize {40e-9 40e-9 10e-9}
  atlas :atlas
}

Specify Oxs_UniformExchange {
  A  13e-12
}

Specify Oxs_PlaneRandomVectorField:axis1 [subst {
   min_norm 1.0
   max_norm 1.0
   plane_normal {0 0 1}
   cache_grid :mesh2
}]

Specify Oxs_CubicAnisotropy [subst {
  K1 $K1cubic
  axis1 :axis1
  axis2 { Oxs_PlaneRandomVectorField {
     min_norm 1.0
     max_norm 1.0
     plane_normal :axis1
     cache_grid :mesh2
  }}
}]

Specify Oxs_RandomScalarField:uniaxialK1 [subst {
   range_min $K1uniaxialmin
   range_max $K1uniaxialmax
   cache_grid :mesh2
}]

Specify Oxs_UniaxialAnisotropy {
   K1 :uniaxialK1
   axis { Oxs_UniformVectorField {
      norm 1
      vector {0 0 1}
   }}
}

Specify Oxs_Demag {}

Specify Oxs_UZeeman [subst {
  multiplier [expr {0.001/$mu0}]
  Hrange {
     { 100  8  0  -100 -8 0   100 }
  }
}]

Specify Oxs_CGEvolve:evolve {}

Specify Oxs_MinDriver {
 basename stdprob1
 evolver :evolve
 stopping_mxHxm 0.01
 mesh :mesh1
 Ms 8.6e5
 m0 {10 1 0}
}
